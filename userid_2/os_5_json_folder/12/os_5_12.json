{
	"page_id": 12,
	"full_text": {
		"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/userid_2/os_5_audio_folder/12/os_5_full_audio_12.mp3",
		"full_text": "상호배제\n• 상호배제(mutual exclusion) 요구조건\n– 어느 한 순간에는 오직 하나의 프로세스만이 임계영역(critical \nsection)에 진입할 수 있다. \n– 임계영역이 아닌 곳에서 수행이 멈춘 프로세스는 다른 프로세스\n의 수행을 간섭해서는 안 된다.\n– 임계영역에 접근하고자 하는 프로세스의 수행이 무한히 미뤄져\n서는 안 된다. 즉, 교착상태(deadlock) 및 기아(starvation)가 일어\n나지 않아야 한다.\n– 임계영역이 비어 있을 때, 임계영역에 진입하려고 하는 프로세스\n가 지연되어서는 안 된다.\n– 프로세서의 개수나 상대적인 프로세스 수행 속도에 대한 가정은\n없어야 한다. \n– 프로세스는 유한 시간 동안만 임계영역에 존재할 수 있다. \n12\n"
	},
	"text": [
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/userid_2/os_5_audio_folder/12/os_5_audio_12_1.mp3",
			"font_size": 32,
			"text": "상호배제\n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/userid_2/os_5_audio_folder/12/os_5_audio_12_2.mp3",
			"font_size": 24,
			"text": "• 상호배제(mutual exclusion) 요구조건\n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/userid_2/os_5_audio_folder/12/os_5_audio_12_3.mp3",
			"font_size": 20,
			"text": "– 어느 한 순간에는 오직 하나의 프로세스만이 임계영역(critical \nsection)에 진입할 수 있다. \n– 임계영역이 아닌 곳에서 수행이 멈춘 프로세스는 다른 프로세스\n의 수행을 간섭해서는 안 된다.\n– 임계영역에 접근하고자 하는 프로세스의 수행이 무한히 미뤄져\n서는 안 된다. 즉, 교착상태(deadlock) 및 기아(starvation)가 일어\n나지 않아야 한다.\n– 임계영역이 비어 있을 때, 임계영역에 진입하려고 하는 프로세스\n가 지연되어서는 안 된다.\n– 프로세서의 개수나 상대적인 프로세스 수행 속도에 대한 가정은\n없어야 한다. \n– 프로세스는 유한 시간 동안만 임계영역에 존재할 수 있다. \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/userid_2/os_5_audio_folder/12/os_5_audio_12_4.mp3",
			"font_size": 12,
			"text": "12\n"
		}
	],
	"image": [
		{
			"img_idx": 1,
			"img_url": "https://storage.googleapis.com/cloud_storage_leturn/userid_2/os_5_image_folder/12/os_5_image_1.png",
			"audio_url": ""
		},
		{
			"img_idx": 2,
			"img_url": "https://storage.googleapis.com/cloud_storage_leturn/userid_2/os_5_image_folder/12/os_5_image_2.png",
			"audio_url": ""
		}
	]
}