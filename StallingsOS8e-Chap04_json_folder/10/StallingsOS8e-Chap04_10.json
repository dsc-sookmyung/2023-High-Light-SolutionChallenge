{
	"page_id": 10,
	"full_text": {
		"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_full_audio_10.mp3",
		"full_text": "프로세스와 쓰레드\n• 단일사용자 멀티프로세싱 시스템에서의 쓰레드의 사용\n- 전면(foreground)과 후면(background) 작업: 응용의 속도 향상\n• 예를 들어, 스프레드시트 프로그램에서 하나의 쓰레드가 메뉴를 나타내고 사용자 입력을\n읽는 중에, 다른 쓰레드는 사용자 명령을 수행하고 스프레드시트를 갱신할 수 있다. \n- 비동기(asynchronous) 처리: \n• 프로그램의 비동기적 요소들을 쓰레드를 통해 구현할 수 있다. 예) 정전으로부터 보호하\n기 위해 1분마다 메모리(RAM) 버퍼의 내용을 디스크로 기록하는 워드 프로세서를 설계\n할 수 있다. 이를 위한 쓰레드가 생성될 수 있는데, 유일한 업무는 주기적인 백업이며 운\n영체제를 통해 직접 자신을 스케줄 한다. 이때 시간을 검사하거나 또는 입력 및 출력을\n조정하기 위해 주 프로그램 내에 복잡한 코드를 작성할 필요는 없다. \n- 빠른 수행: \n• 멀티쓰레드 프로세스는 어떤 데이터 묶음(batch)을 계산하면서 동시에 어떤 장치로부터\n다음 데이터 묶음을 읽어 들일 수 있다. 멀티프로세스시스템에서 한 프로세스 내의 여러\n쓰레드들은 실제적으로 동시에 수행될 수 있다. 따라서 한 쓰레드가 특정 데이터 묶음을\n읽기 위해 입출력 작업 완료를 기다리면서 블록(block)될지라도, 또 다른 쓰레드가 수행\n될 수 있다. \n– 모듈 프로그램 구조: \n• 다양한 활동 혹은 입출력 연산에 대한 다양한 출발ㆍ목적지를 포함하고 있는 프로그램의\n경우, 쓰레드들을 사용하여 설계하고 구현하는 것이 편리하다. \n10\n"
	},
	"text": [
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_1.mp3",
			"font_size": 32,
			"text": "프로세스와 쓰레드\n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_2.mp3",
			"font_size": 20,
			"text": "• 단일사용자 멀티프로세싱 시스템에서의 쓰레드의 사용\n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_3.mp3",
			"font_size": 17,
			"text": "- 전면(foreground)과 후면(background) 작업: 응용의 속도 향상\n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_4.mp3",
			"font_size": 14,
			"text": "• 예를 들어, 스프레드시트 프로그램에서 하나의 쓰레드가 메뉴를 나타내고 사용자 입력을\n읽는 중에, 다른 쓰레드는 사용자 명령을 수행하고 스프레드시트를 갱신할 수 있다. \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_5.mp3",
			"font_size": 17,
			"text": "- 비동기(asynchronous) 처리: \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_6.mp3",
			"font_size": 14,
			"text": "• 프로그램의 비동기적 요소들을 쓰레드를 통해 구현할 수 있다. 예) 정전으로부터 보호하\n기 위해 1분마다 메모리(RAM) 버퍼의 내용을 디스크로 기록하는 워드 프로세서를 설계\n할 수 있다. 이를 위한 쓰레드가 생성될 수 있는데, 유일한 업무는 주기적인 백업이며 운\n영체제를 통해 직접 자신을 스케줄 한다. 이때 시간을 검사하거나 또는 입력 및 출력을\n조정하기 위해 주 프로그램 내에 복잡한 코드를 작성할 필요는 없다. \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_7.mp3",
			"font_size": 17,
			"text": "- 빠른 수행: \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_8.mp3",
			"font_size": 14,
			"text": "• 멀티쓰레드 프로세스는 어떤 데이터 묶음(batch)을 계산하면서 동시에 어떤 장치로부터\n다음 데이터 묶음을 읽어 들일 수 있다. 멀티프로세스시스템에서 한 프로세스 내의 여러\n쓰레드들은 실제적으로 동시에 수행될 수 있다. 따라서 한 쓰레드가 특정 데이터 묶음을\n읽기 위해 입출력 작업 완료를 기다리면서 블록(block)될지라도, 또 다른 쓰레드가 수행\n될 수 있다. \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_9.mp3",
			"font_size": 17,
			"text": "– 모듈 프로그램 구조: \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_10.mp3",
			"font_size": 14,
			"text": "• 다양한 활동 혹은 입출력 연산에 대한 다양한 출발ㆍ목적지를 포함하고 있는 프로그램의\n경우, 쓰레드들을 사용하여 설계하고 구현하는 것이 편리하다. \n"
		},
		{
			"audio_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_audio_folder/10/StallingsOS8e-Chap04_audio_10_11.mp3",
			"font_size": 12,
			"text": "10\n"
		}
	],
	"image": [
		{
			"img_idx": 1,
			"audio_url": "",
			"img_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_image_folder/10/StallingsOS8e-Chap04_image_1.png"
		},
		{
			"img_idx": 2,
			"audio_url": "",
			"img_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_image_folder/10/StallingsOS8e-Chap04_image_2.png"
		},
		{
			"img_idx": 3,
			"audio_url": "",
			"img_url": "https://storage.googleapis.com/cloud_storage_leturn/StallingsOS8e-Chap04_image_folder/10/StallingsOS8e-Chap04_image_3.png"
		}
	]
}